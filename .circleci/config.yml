version: 2
jobs:
  build:
      working_directory: ~/code
      docker:
        - image: circleci/android:api-28-alpha
        - image: google/cloud-sdk  # gcloud is baked into this image
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - checkout
        - restore_cache:
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  #      - run:
  #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
  #         command: sudo chmod +x ./gradlew
        - run:
            name: Download Dependencies
            command: ./gradlew androidDependencies
        - save_cache:
            paths:
              - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
        - run:
            name: Run Tests
            command: ./gradlew lint test
        - store_artifacts:
            path: app/build/reports
            destination: reports
        - store_test_results:
            path: app/build/test-results
        - run:
            name: Build debug APK and release APK
            command: |
              ./gradlew :app:assembleDebug
              ./gradlew :app:assembleDebugAndroidTest
        - run:
            name: Store Google Service Account
            command: echo $GCLOUD_SERVICE_KEY > app/gcloud-service-key.json
        - run:
            name: Authorize gcloud and set config defaults
            command: |
              sudo gcloud auth activate-service-account --key-file=app/gcloud-service-key.json
              sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
        - run:
            name: Run instrumented test on Firebase Test Lab
            command: gcloud firebase test android run --type instrumentation --app app/build/outputs/apk/debug/mobile-debug.apk --test app/build/outputs/apk/androidTest/debug/mobile-debug-androidTest.apk --device model=sailfish,version=26,locale=en_US,orientation=portrait --environment-variables coverage=true,coverageFile=/sdcard/tmp/code-coverage/connected/coverage.ec --directories-to-pull=/sdcard/tmp --timeout 20m
        - run:
            name: Create directory to store test results
            command: mkdir firebase
        - run:
            name: Install gsutil dependency and copy test results data
            command: |
              sudo pip install -U crcmod
              sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true




